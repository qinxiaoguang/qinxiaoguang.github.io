#+TITLE: lsof
* 概述
lsof(list open file)，即列出打开的文件。linux中万物皆文件，而lsof是一个列出当前系统打开文件的工具，所以lsof可以列出几乎所有东西，比如列出程序已经打开的常规文件，甚至网络连接如socket等。
* 文件描述符
以下内容摘自百度
#+BEGIN_VERSE
linux中内核通过文件描述符来访问文件，文件描述符是非负整数，打开现存文件或新建文件时，内核会返回一个文件描述符，读写文件也需要使用文件描述符来指定待读写的文件。
每一个文件描述符会与一个打开文件相对应，同时，不同的文件描述符也会指向同一个文件。相同的文件可以被不同的进程打开也可以在同一个进程中被多次打开。系统为每一个进程维护了一个文件描述符表，该表的值都是从0开始的，所以在不同的进程中你会看到相同的文件描述符，这种情况下相同文件描述符有可能指向同一个文件，也有可能指向不同的文件。
文件描述符：在linux系统中打开文件就会获得文件描述符，它是个很小的非负整数。每个进程在PCB（Process Control Block）中保存着一份文件描述符表，文件描述符就是这个表的索引，每个表项都有一个指向已打开文件的指针。
文件指针：C语言中使用文件指针做为I/O的句柄。文件指针指向进程用户区中的一个被称为FILE结构的数据结构。FILE结构包括一个缓冲区和一个文件描述符。而文件描述符是文件描述符表的一个索引，因此从某种意义上说文件指针就是句柄的句柄（在Windows系统上，文件描述符被称作文件句柄）。
#+END_VERSE
而lsof就是通过操作文件描述符来进行的。
* 使用方法
- =lsof= 默认显示所有进程打开的所有文件。
- =lsof filename= 显示开启该文件的进程
- =lsof -c pname= 显示pname进程打开的文件,-c选项列出所有以pname开头的进程打开的文件。也可使用 =lsof -c panme1 -c panme2= 来列出多个进程打开的文件。
- =lsof -p [pid]= 显示pid进程号的进程打开的文件, =lsof -p 123,456= 列出多个进程号对应的文件信息
- =lsof +d /usr/local= 显示该目录下被进程打开的文件
- =lsof +D /usr/local= 递归搜索该目录下被进程打开的文件
- =lsof -d 4= 显示使用fd为4的进程
- =lsof -u username= 显示用户打开的文件信息
- =lsof -i= 列出所有的网络连接, =lsof -i tcp= 列出所有tcp网络连接信息， =lsof -i udp= 列出所有udp网络连接信息, =lsof -i:port= 列出谁在使用某个端口, =lsof -i udp:port= 列出谁在使用特定的udp端口。 =lsof -i tcp:80= 同上。 =lsof -a -u username -i= 列出某个用户所有活跃的网络端口。
* 应用
** 卸载时检查是否有人在用当前目录文件
使用 =lsof /path= 可进行检查
** 恢复误删文件
偶尔会使用 =find ./ -mtime +7 -name "*" -exec rm -fv {} \;= 来删除过期的文件，但是有时候会失误把脚本文件 =*.sh= 也给误删掉了，但是好在这些文件一直在后台运行，所以，可以通过lsof来恢复文件。
#+BEGIN_VERSE
1. lsof | grep deleted | grep sh 找到对应的进程的pid
2. cd /proc/$pid/fd
3. ll 来查看哪个文件软链到了删掉的文件上
4. cat file > /path
#+END_VERSE
