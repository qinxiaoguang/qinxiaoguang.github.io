#+TITLE: go服务持续出现连接超时问题排查

* 概述
用golang做的服务，刚开始一切对外的连接都没有问题，但是服务跑了很久后，再有请求过了15s左右都返回超时的信息： =net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)= ，起初以为是http连接的对方的请求有问题，后来发现这个报错信息是golang的net/http包打出来的，所以考虑是本地对外的连接问题。
看了一系列的资料，https://medium.com/@nate510/don-t-use-go-s-default-http-client-4804cb19f779 目前，这个资料比较让人信服，使用默认的http.Client，其Timeout设置为0，则在遇到超时问题时，会被hang掉,除非服务器提前做出响应。所以为了避免一切问题的出现，在使用默认http.Client的时候，都要为其设置一个超时的时间，如 =client = &http.Client{}; cliient.SetTimeout(xx)=, 也可以设置变量 =MaxIdleConnsPerHost= 小于0.
还有一些可能的原因也会导致连接一直超时，如Request没有及时关闭，Response也没有及时关闭等等。

如果发现还有这种问题，可以使用 =ls /proc/$PID/fd -l | grep socket:|wc -l= 来查看相关进程建立的socket连接个数，其中fd目录下有很多socket连接，都会有相应的id,如果要通过id查看更多信息，可以到 =/proc/net/tcp= 文件下查看，该文件保存了所有的tcp连接信息。如果socket连接超过10个，一般就是网络泄漏，使用 =lsof | grep sock= 命令很容易能看到大量的can't identify protocol错误。出现这个问题是socket泄漏，要用strace命令去解决，可能引起这个问题的是内存的原因，导致socket不能被建立，也有可能是其他原因，具体问题具体分析。

* 参考资料
http://oohcode.com/2018/06/01/golang-http-client-connection-pool/
https://medium.com/@nate510/don-t-use-go-s-default-http-client-4804cb19f779 
http://www.yunweipai.com/archives/7885.html
