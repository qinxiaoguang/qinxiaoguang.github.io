#+TITLE: 网页设计中的小问题

* 概述
在做网页设计中，有很多需要理清楚的内容，如登录你应该如何设计，登录如何不影响用户，不产生bug等。这些内容在做的时候，其实会进行调研，所以需要将调研内容理出来，免得日后需要。

* 设计
** 登录设计
首先要明白登录的相关原理是通过cookie-session来产生的。
那么问题是:
1. 如何做到登录后7天内免登录。每次登录都刷新这个时间，还是固定的7天免登录呢。
2. cookie在浏览器关闭后是否会消失，下次打开浏览器是否还需要重新登录。
3. session-id的生成原理，以及在服务器中应该如何保存。
4. 第三方登录如何设计。
5. 如何设计单点登录。

分别进行解释:
1. 7天内免登录，是通过cookie的过期时间机制进行的设计，对于cookie来说，其分为两种，分别是内存cookie和硬盘cookie,其中内存cookie在浏览器关闭后会自动消失，而硬盘cookie则不会。那么如何使用两种cookie呢，其实方法非常简单，就是对cookie设置Expires属性，即过期时间，如果没设置，则为内存cookie,若设置了则为硬盘cookie。其实这么解释又把cookie变复杂了。只需要知道cookie在非浏览器层面是有过期时间的。再说另一个问题，每次登录都刷新这个时间吗。其实这个分情况，你可以选择刷新可以选择不刷新，看你的需求是什么样的。对于个人博客来讲，刷新会防止你多次登录，显得快捷。
2. 第一个问题中已经解释过，其实就是通过硬盘来保存cookie,这样就能保证打开浏览器后不需要重新登录。
3. session-id的生成有很多种，可以使用md5,使用时间加随机数等等，也可以使用uuid，这个都是很灵活的，不必纠结他到底是怎么生成的。
4. 第三方登录，拿github来举例，因当前主要针对github做第三方登录，主要实现思路是，再请求登录时，重定向到github登录网站，授权后，github会进行相应的回调，回调后获取回调信息(token)的相应用户名等等信息，之后在本地生成对应的session-id即可。
5. 单点登录即SSO(SingleSignOn),同域名下的单点很简单，就是使用cookie-session的方式实现，因为cookie可以在同域下传递，而不同域下的cookie是不能共享的，所以不同域的单点登录会通过后台的一个统一的登录系统实现，可以出理解为授权系统,可以参考github的授权登录是怎么实现的(通过重定向到统一的登录页面)。
** 小工具设计
** 文章选型
使用mongodb进行存储，并且定期将文章导出为md格式，自动同步到github中。
考虑使用mongodb时，能保存老版本内容，需要两个表，一个Article表，保存当前文章内容，一个OldArticle保存老的文章内容。
** 相册选型
相册选型有多种选型，比如七牛云存储，但是七牛云的访问域名不能是阿里云的，所以考虑放弃，直接使用github来进行保存。方案是直接将图片上传到服务上，为了防止图片过大(>2M)，将图片先进行压缩，之后定期同步到github上。
